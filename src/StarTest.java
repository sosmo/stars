// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import java.util.Arrays;
import java.io.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2015.01.02 15:43:55 // Generated by ComTest
 *
 */
public class StarTest {



  // Generated by ComTest BEGIN
  /** testInvertX220 */
  @Test
  public void testInvertX220() {    // Star: 220
    int[][] m1 = {
    {  5,-1,21, 8 },
    {  2, 1, 1, 2 },
    {  2, 1, 6, 3 },
    {  0, 3, 0, 4 },
    } ; 
    int[][] odotus = {
    {  8,21,-1, 5 },
    {  2, 1, 1, 2 },
    {  3, 6, 1, 2 },
    {  4, 0, 3, 0 },
    } ; 
    ; 
    Star.invertX(m1); 
    assertEquals("From: Star line: 236", true, Arrays.deepEquals(odotus, m1)); 
    Star.invertX(odotus); 
    Star.invertX(m1); 
    assertEquals("From: Star line: 239", true, Arrays.deepEquals(odotus, m1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testInvertY257 */
  @Test
  public void testInvertY257() {    // Star: 257
    int[][] m1 = {
    {  5,-1,21, 8 },
    {  2, 1, 1, 2 },
    {  2, 1, 6, 3 },
    {  0, 3, 0, 4 },
    } ; 
    int[][] odotus = {
    {  0, 3, 0, 4 },
    {  2, 1, 6, 3 },
    {  2, 1, 1, 2 },
    {  5,-1,21, 8 },
    } ; 
    ; 
    Star.invertY(m1); 
    assertEquals("From: Star line: 273", true, Arrays.deepEquals(odotus, m1)); 
    Star.invertY(odotus); 
    Star.invertY(m1); 
    assertEquals("From: Star line: 276", true, Arrays.deepEquals(odotus, m1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testMask299 */
  @Test
  public void testMask299() {    // Star: 299
    int[][] alkukuva = {
    {  0, 0, 1, 0 },
    {  1, 1, 1, 1 },
    {  0, 1, 0, 0 },
    {  0, 0, 0, 0 },
    } ; 
    int[][] kuva = Star.cloneMatrix(alkukuva); 
    int[][] maski = {
    { 0, 1, 1 },
    { 0, 1, 0 },
    { 1, 0, 1 },
    } ; 
    ; 
    int[][] odotus; 
    odotus = new int[][] {
    {  1, 0, 1, 0 },
    {  1, 1, 1, 1 },
    {  0, 1, 0, 0 },
    {  0, 0, 0, 0 },
    } ; 
    Star.mask(kuva, maski, 0, 0); 
    assertEquals("From: Star line: 322", true, Arrays.deepEquals(odotus, kuva)); 
    kuva = Star.cloneMatrix(alkukuva); 
    odotus = new int[][] {
    {  0, 0, 1, 0 },
    {  1, 1, 1, 1 },
    {  0, 1, 0, 1 },
    {  0, 0, 0, 1 },
    } ; 
    Star.mask(kuva, maski, 3, 3); 
    assertEquals("From: Star line: 331", true, Arrays.deepEquals(odotus, kuva)); 
    kuva = Star.cloneMatrix(alkukuva); 
    odotus = new int[][] {
    {  0, 0, 1, 0 },
    {  1, 1, 1, 1 },
    {  0, 1, 1, 0 },
    {  0, 1, 0, 1 },
    } ; 
    Star.mask(kuva, maski, 2, 2); 
    assertEquals("From: Star line: 340", true, Arrays.deepEquals(odotus, kuva)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testMod374 */
  @Test
  public void testMod374() {    // Star: 374
    assertEquals("From: Star line: 376", 1, Star.mod(5, 2), 0.01); 
    assertEquals("From: Star line: 377", 2, Star.mod(2, 5), 0.01); 
    assertEquals("From: Star line: 378", 0, Star.mod(9, 3), 0.01); 
    assertEquals("From: Star line: 379", 0, Star.mod(0, 4), 0.01); 
    assertEquals("From: Star line: 380", 2, Star.mod(-7, 3), 0.01); 
    assertEquals("From: Star line: 381", 4, Star.mod(-3, 7), 0.01); 
    assertEquals("From: Star line: 382", -2, Star.mod(7, -3), 0.01); 
    assertEquals("From: Star line: 383", -4, Star.mod(3, -7), 0.01); 
    assertEquals("From: Star line: 384", -1, Star.mod(-7, -3), 0.01); 
    assertEquals("From: Star line: 385", -3, Star.mod(-3, -7), 0.01); 
    assertEquals("From: Star line: 386", 0.4, Star.mod(5, 2.3), 0.01); 
    assertEquals("From: Star line: 387", 2.3, Star.mod(2.3, 5), 0.01); 
    assertEquals("From: Star line: 388", 0.7, Star.mod(9.1, 2.8), 0.01); 
    assertEquals("From: Star line: 389", 0.5, Star.mod(0.5, 4.5), 0.01); 
    assertEquals("From: Star line: 390", 1.1, Star.mod(-7.9, 3), 0.01); 
    assertEquals("From: Star line: 391", 3.1, Star.mod(-3.9, 7), 0.01); 
    assertEquals("From: Star line: 392", -1.1, Star.mod(7.9, -3), 0.01); 
    assertEquals("From: Star line: 393", -3.1, Star.mod(3.9, -7), 0.01); 
    assertEquals("From: Star line: 394", -1.9, Star.mod(-7.9, -3), 0.01); 
    assertEquals("From: Star line: 395", -3.9, Star.mod(-3.9, -7), 0.01); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testCloneMatrix409 */
  @Test
  public void testCloneMatrix409() {    // Star: 409
    int[][] m1 = {
    {  5,-1,21, 8 },
    {  2, 1, 1, 2 },
    {  2, 1, 6, 3 },
    {  0, 3, 0, 4 },
    } ; 
    int[][] m2 = Star.cloneMatrix(m1); 
    assertEquals("From: Star line: 418", true, m2 != m1); 
    assertEquals("From: Star line: 419", true, Arrays.deepEquals(m1, m2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPrintCanvas440 */
  @Test
  public void testPrintCanvas440() {    // Star: 440
    String nl = System.lineSeparator(); 
    ByteArrayOutputStream bos = new ByteArrayOutputStream(); 
    PrintStream ps = new PrintStream(bos); 
    int[][] m1 = {
    {  5,-1,21, 0 },
    {  2, 0, 1, 2 },
    {  2, 1, 0, 3 },
    {  0, 3, 0, 4 },
    } ; 
    Star.printCanvas(m1, '*', ps); 
    String odotus = " * * *  " + nl +
    " *   * *" + nl +
    " * *   *" + nl +
    "   *   *"; 
    odotus.equals(bos.toString()); 
  } // Generated by ComTest END
}